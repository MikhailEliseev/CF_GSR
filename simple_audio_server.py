#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≥–æ–ª–æ—Å–∞
"""
import http.server
import socketserver
import os
import sys
from urllib.parse import urlparse, parse_qs
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('.')

class AudioHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/':
            self.path = '/test_audio_settings.html'
        return super().do_GET()
    
    def do_POST(self):
        if self.path == '/api/trends/generate-audio':
            self.handle_audio_generation()
        else:
            self.send_error(404)
    
    def handle_audio_generation(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ"""
        try:
            # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            data = json.loads(post_data.decode('utf-8'))
            
            print(f"üéµ –ó–∞–ø—Ä–æ—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ:")
            print(f"   –¢–µ–∫—Å—Ç: {data.get('text', '')[:50]}...")
            print(f"   –ì–æ–ª–æ—Å: {data.get('voice_id', '')}")
            print(f"   –ú–æ–¥–µ–ª—å: {data.get('model_id', '')}")
            print(f"   Speed: {data.get('speed', 1.0)}")
            print(f"   Stability: {data.get('stability', 0.5)}")
            print(f"   Similarity: {data.get('similarity_boost', 0.5)}")
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞—É–¥–∏–æ
            import uuid
            audio_filename = f"test_audio_{uuid.uuid4().hex}.mp3"
            audio_url = f"/static/audio/{audio_filename}"
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            os.makedirs("static/audio", exist_ok=True)
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π MP3 —Ñ–∞–π–ª
            test_audio_path = f"static/audio/{audio_filename}"
            with open(test_audio_path, 'wb') as f:
                # –ü—Ä–æ—Å—Ç–æ–π MP3 –∑–∞–≥–æ–ª–æ–≤–æ–∫
                mp3_header = bytes([
                    0xFF, 0xFB, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                ])
                # –°–æ–∑–¥–∞–µ–º ~3 —Å–µ–∫—É–Ω–¥—ã —Ç–∏—à–∏–Ω—ã
                audio_data = mp3_header * 300
                f.write(audio_data)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            response = {
                'success': True,
                'audio_url': audio_url,
                'message': '–ê—É–¥–∏–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!'
            }
            
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps(response).encode('utf-8'))
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            error_response = {
                'success': False,
                'message': f'–û—à–∏–±–∫–∞: {str(e)}'
            }
            
            self.send_response(500)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            self.wfile.write(json.dumps(error_response).encode('utf-8'))

if __name__ == "__main__":
    PORT = 8080
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    print(f"üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:{PORT}")
    print("üéµ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–∞ ElevenLabs")
    
    with socketserver.TCPServer(("", PORT), AudioHandler) as httpd:
        try:
            httpd.serve_forever()
        except KeyboardInterrupt:
            print("\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
