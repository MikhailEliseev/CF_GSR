#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Ä—É—Å—Å–∫–æ–≥–æ –≥–æ–ª–æ—Å–∞ –ê–ª–µ–∫—Å–µ–π –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∏–π"""

import requests
import json

def test_russian_voice():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å"""
    
    # –ö–ª—é—á —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
    api_key = "sk_76ff61f01df7d9a12c594e8f45cfa349d1917402ba5ec828"
    
    # –†—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å
    voice_id = "CfPkL4eEqBDVYldLZuY5"  # –ê–ª–µ–∫—Å–µ–π –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∏–π
    
    # URL –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ
    url = f"https://api.elevenlabs.io/v1/text-to-speech/{voice_id}"
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    headers = {
        "xi-api-key": api_key,
        "Content-Type": "application/json"
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    data = {
        "text": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç —Ä—É—Å—Å–∫–æ–≥–æ –≥–æ–ª–æ—Å–∞ –ê–ª–µ–∫—Å–µ—è –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–æ–≥–æ. –ö–∞–∫ –¥–µ–ª–∞?",
        "model_id": "eleven_multilingual_v2",
        "voice_settings": {
            "stability": 0.5,
            "similarity_boost": 0.5
        }
    }
    
    print(f"üîë –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª—é—á: {api_key[:20]}...")
    print(f"üé§ –ì–æ–ª–æ—Å: –ê–ª–µ–∫—Å–µ–π –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∏–π ({voice_id})")
    print(f"üåê URL: {url}")
    print(f"üìù –¢–µ–∫—Å—Ç: {data['text']}")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.post(url, headers=headers, json=data, timeout=30)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìè –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
        
        if response.status_code == 200:
            print("‚úÖ –†—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—É–¥–∏–æ –≤ —Ñ–∞–π–ª
            with open("test_russian_voice.mp3", "wb") as f:
                f.write(response.content)
            print("üíæ –ê—É–¥–∏–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ test_russian_voice.mp3")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üéµ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä—É—Å—Å–∫–∏–π –≥–æ–ª–æ—Å –ê–ª–µ–∫—Å–µ–π –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∏–π...")
    success = test_russian_voice()
    
    if success:
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª!")
