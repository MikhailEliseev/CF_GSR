#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ ElevenLabs –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import paramiko
import json

SERVER_HOST = "72.56.66.228"
SERVER_USER = "root"
SERVER_PASSWORD = "g2D,RytdQoSAYv"

def check_server_elevenlabs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º ElevenLabs –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º ElevenLabs –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
    
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(SERVER_HOST, username=SERVER_USER, password=SERVER_PASSWORD)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ElevenLabs...")
        stdin, stdout, stderr = ssh.exec_command("curl -s http://localhost:5000/api/settings/vacancies")
        settings = json.loads(stdout.read().decode())
        elevenlabs_key = settings.get('api_keys', {}).get('elevenlabs_api_key', '')
        print(f"–ö–ª—é—á ElevenLabs: {elevenlabs_key[:20]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
        print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞...")
        stdin, stdout, stderr = ssh.exec_command("tail -20 /root/server.log")
        logs = stdout.read().decode()
        print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:")
        print(logs)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã...")
        stdin, stdout, stderr = ssh.exec_command("ps aux | grep python | grep -v grep")
        processes = stdout.read().decode()
        print("Python –ø—Ä–æ—Ü–µ—Å—Å—ã:")
        print(processes)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API —Å —Å–µ—Ä–≤–µ—Ä–∞
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API —Å —Å–µ—Ä–≤–µ—Ä–∞...")
        test_script = '''
import requests
import json

api_key = "sk_76ff61f01df7d9a12c594e8f45cfa349d1917402ba5ec828"

try:
    # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
    response = requests.get(
        "https://api.elevenlabs.io/v1/user",
        headers={"xi-api-key": api_key},
        timeout=10
    )
    print(f"–°—Ç–∞—Ç—É—Å API: {response.status_code}")
    if response.status_code == 200:
        print("‚úÖ ElevenLabs API –¥–æ—Å—Ç—É–ø–µ–Ω")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.text[:200]}")
        
    # –¢–µ—Å—Ç –≥–æ–ª–æ—Å–æ–≤
    response = requests.get(
        "https://api.elevenlabs.io/v1/voices",
        headers={"xi-api-key": api_key},
        timeout=10
    )
    print(f"–°—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤: {response.status_code}")
    if response.status_code == 200:
        voices = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤: {len(voices.get('voices', []))}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤: {response.text[:200]}")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
'''
        
        stdin, stdout, stderr = ssh.exec_command(f"python3 -c \"{test_script}\"")
        result = stdout.read().decode()
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:")
        print(result)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        ssh.close()

if __name__ == "__main__":
    check_server_elevenlabs()
