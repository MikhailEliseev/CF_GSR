#!/usr/bin/env python3
"""–¢–µ—Å—Ç error fallback –∫–æ–≥–¥–∞ –≤—Å–µ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"""

from api.openai_client import OpenAIClient

def test_error_fallback():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º error fallback...")
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–ª—é—á–æ–º –∏ –ª–æ–º–∞–µ–º Gemini
    client = OpenAIClient(api_key="wrong_key")
    client.base_url = "https://invalid.openai.com"  # –õ–æ–º–∞–µ–º OpenAI
    client._gemini_request = lambda x: exec('raise Exception("Gemini broken")')  # –õ–æ–º–∞–µ–º Gemini
    
    text = "–¢–µ—Å—Ç"
    print(f"üìù –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}")
    
    try:
        result = client.rewrite_text(text)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç error fallback: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï" in result and "AI —Å–µ—Ä–≤–∏—Å—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã" in result:
            print("‚úÖ –£—Å–ø–µ—Ö: –ü–æ–ª—É—á–µ–Ω–æ —á–µ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
            return True
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –ø–æ–ª—É—á–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_error_fallback()
    exit(0 if success else 1)
