#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π CSV —Ñ–∞–π–ª–æ–≤
"""

import paramiko
import time

SERVER_HOST = "72.56.66.228"
SERVER_USER = "root"
SERVER_PASSWORD = "g2D,RytdQoSAYv"

def fix_csv_upload_issue():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –∑–∞–≥—Ä—É–∑–∫–æ–π CSV —Ñ–∞–π–ª–æ–≤"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –∑–∞–≥—Ä—É–∑–∫–æ–π CSV —Ñ–∞–π–ª–æ–≤...")
    
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(SERVER_HOST, username=SERVER_USER, password=SERVER_PASSWORD)
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª...")
        stdin, stdout, stderr = ssh.exec_command("grep -n 'function loadCsv' /root/templates/module_vacancies.html")
        line_info = stdout.read().decode()
        print(f"–ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadCsv: {line_info}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ loadCsv
        print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadCsv...")
        stdin, stdout, stderr = ssh.exec_command("sed -n '276,308p' /root/templates/module_vacancies.html")
        function_code = stdout.read().decode()
        print("–ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ loadCsv:")
        print(function_code)
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
        if function_code.strip().startswith('function loadCsv() {\n    \n    const fileInput'):
            print("‚ùå –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞: –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É
            print("\n3Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É...")
            
            # –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Ñ—É–Ω–∫—Ü–∏–∏
            fixed_function = '''// –ó–∞–≥—Ä—É–∑–∫–∞ CSV —Ñ–∞–π–ª–∞
function loadCsv() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º CSV —Ñ–∞–π–ª...');
    const fileInput = document.getElementById('csvFile');
    const file = fileInput.files[0];
    
    if (!file) {
        alert('–í—ã–±–µ—Ä–∏—Ç–µ CSV —Ñ–∞–π–ª');
        return;
    }
    
    showStatus('–ó–∞–≥—Ä—É–∂–∞–µ–º CSV...', 'info');
    
    const formData = new FormData();
    formData.append('file', file);
    
    fetch('/api/vacancies/upload-csv', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showStatus(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.count} –≤–∞–∫–∞–Ω—Å–∏–π –∏–∑ CSV`, 'success');
            displayVacancies(data.vacancies);
        } else {
            showStatus('‚ùå –û—à–∏–±–∫–∞: ' + data.error, 'error');
        }
    })
    .catch(error => {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        showStatus('‚ùå –û—à–∏–±–∫–∞: ' + error.message, 'error');
    });
}'''
            
            # –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            stdin, stdout, stderr = ssh.exec_command("sed -i '276,308c\\" + fixed_function + "' /root/templates/module_vacancies.html")
            stdout.read()
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è loadCsv –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è loadCsv –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –æ–±–Ω–æ–≤–∏–ª—Å—è
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...")
        stdin, stdout, stderr = ssh.exec_command("grep -A 5 'function loadCsv' /root/templates/module_vacancies.html")
        updated_function = stdout.read().decode()
        print("–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:")
        print(updated_function)
        
        # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É CSV
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É CSV...")
        test_cmd = "curl -X POST -F 'file=@/root/test_data/real_vacancies.csv' http://localhost:5000/api/vacancies/upload-csv"
        stdin, stdout, stderr = ssh.exec_command(test_cmd)
        result = stdout.read().decode()
        
        if "success" in result and "count" in result:
            print("‚úÖ CSV –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print("üéâ –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞!")
            return True
        else:
            print(f"‚ùå CSV –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {result[:200]}")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        ssh.close()

if __name__ == "__main__":
    success = fix_csv_upload_issue()
    if success:
        print("\n‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π CSV —Ñ–∞–π–ª–æ–≤ —Ä–µ—à–µ–Ω–∞!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ http://72.56.66.228/module/vacancies")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–≥—Ä—É–∑–∏—Ç—å CSV' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞")
