#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö MP3 —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–ª–µ–µ—Ä–∞
"""
import os
import uuid
import wave
import struct
import math

def create_sine_wave(frequency, duration, sample_rate=44100):
    """–°–æ–∑–¥–∞–µ—Ç —Å–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω—É—é –≤–æ–ª–Ω—É"""
    samples = []
    for i in range(int(sample_rate * duration)):
        value = int(32767 * math.sin(2 * math.pi * frequency * i / sample_rate))
        samples.append(value)
    return samples

def create_audio_file(text, filename):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –∞—É–¥–∏–æ —Ñ–∞–π–ª —Å —Ç–æ–Ω–æ–º"""
    print(f"üéµ –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞: {filename}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    audio_dir = "static/audio"
    os.makedirs(audio_dir, exist_ok=True)
    filepath = os.path.join(audio_dir, filename)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞—É–¥–∏–æ
    sample_rate = 44100
    duration = 3.0  # 3 —Å–µ–∫—É–Ω–¥—ã
    frequency = 440  # –õ—è –ø–µ—Ä–≤–æ–π –æ–∫—Ç–∞–≤—ã
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω—É—é –≤–æ–ª–Ω—É
    samples = create_sine_wave(frequency, duration, sample_rate)
    
    # –°–æ–∑–¥–∞–µ–º WAV —Ñ–∞–π–ª
    wav_filename = filepath.replace('.mp3', '.wav')
    with wave.open(wav_filename, 'w') as wav_file:
        wav_file.setnchannels(1)  # –ú–æ–Ω–æ
        wav_file.setsampwidth(2)  # 16 –±–∏—Ç
        wav_file.setframerate(sample_rate)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        for sample in samples:
            wav_file.writeframes(struct.pack('<h', sample))
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MP3 —Å –ø–æ–º–æ—â—å—é pydub
    try:
        from pydub import AudioSegment
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º WAV
        audio = AudioSegment.from_wav(wav_filename)
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∫ MP3
        audio.export(filepath, format="mp3", bitrate="128k")
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π WAV —Ñ–∞–π–ª
        os.remove(wav_filename)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω MP3 —Ñ–∞–π–ª: {filepath}")
        return filepath
        
    except ImportError:
        print("‚ö†Ô∏è pydub –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π WAV —Ñ–∞–π–ª")
        return wav_filename

def create_simple_mp3(text, filename):
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π MP3 —Ñ–∞–π–ª –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫"""
    print(f"üéµ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞: {filename}")
    
    audio_dir = "static/audio"
    os.makedirs(audio_dir, exist_ok=True)
    filepath = os.path.join(audio_dir, filename)
    
    # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–∞–ª–∏–¥–Ω—ã–π MP3 —Ñ–∞–π–ª
    # MP3 –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è 128kbps, 44.1kHz, –º–æ–Ω–æ
    mp3_header = bytes([
        0xFF, 0xFB, 0x90, 0x00,  # MP3 –∑–∞–≥–æ–ª–æ–≤–æ–∫
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ])
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è ~3 —Å–µ–∫—É–Ω–¥
    audio_data = mp3_header * 1000  # ~3 —Å–µ–∫—É–Ω–¥—ã
    
    with open(filepath, 'wb') as f:
        f.write(audio_data)
    
    os.chmod(filepath, 0o644)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Å—Ç–æ–π MP3: {filepath}")
    return filepath

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéµ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    test_files = [
        ("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç –ø–ª–µ–µ—Ä–∞.", "test_hello.mp3"),
        ("–¢–µ—Å—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.", "test_audio.mp3"),
        ("–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–ª–µ–µ—Ä–∞.", "test_final.mp3")
    ]
    
    created_files = []
    
    for text, filename in test_files:
        try:
            # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å pydub
            filepath = create_audio_file(text, filename)
            created_files.append(filepath)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å pydub: {e}")
            # Fallback –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π MP3
            filepath = create_simple_mp3(text, filename)
            created_files.append(filepath)
    
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(created_files)} –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤:")
    for filepath in created_files:
        print(f"  üìÅ {filepath}")
    
    return created_files

if __name__ == "__main__":
    main()
