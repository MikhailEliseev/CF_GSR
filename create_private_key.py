#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ SSH –∫–ª—é—á–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
"""

import os
import subprocess

def create_private_key():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π SSH –∫–ª—é—á"""
    print("üîë –°–æ–∑–¥–∞—é –ø—Ä–∏–≤–∞—Ç–Ω—ã–π SSH –∫–ª—é—á...")
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–∞—Ä—É –∫–ª—é—á–µ–π
        result = subprocess.run([
            "ssh-keygen", "-t", "rsa", "-b", "4096", "-f", "server_key", "-N", ""
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å–æ–∑–¥–∞–Ω: server_key")
            print("‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á —Å–æ–∑–¥–∞–Ω: server_key.pub")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
            os.chmod("server_key", 0o600)
            os.chmod("server_key.pub", 0o644)
            
            print("‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
            with open("server_key.pub", "r") as f:
                public_key = f.read().strip()
            
            print(f"\nüìã –ü–£–ë–õ–ò–ß–ù–´–ô –ö–õ–Æ–ß –î–õ–Ø –°–ï–†–í–ï–†–ê:")
            print(f"{public_key}")
            print("\nüîß –î–û–ë–ê–í–¨–¢–ï –≠–¢–û–¢ –ö–õ–Æ–ß –í –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–ï–†–í–ï–†–û–ú!")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–∞: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
    
    try:
        result = subprocess.run([
            "ssh", "-i", "server_key", "-o", "StrictHostKeyChecking=no",
            "user@72.56.66.228", "echo 'SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'"
        ], capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            print("‚úÖ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {result.stdout.strip()}")
            return True
        else:
            print(f"‚ùå SSH –æ—à–∏–±–∫–∞: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üöÄ –°–û–ó–î–ê–ù–ò–ï SSH –ö–õ–Æ–ß–ê –î–õ–Ø –°–ï–†–í–ï–†–ê")
    print("="*50)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª—é—á
    if create_private_key():
        print("\n‚úÖ –ö–õ–Æ–ß –°–û–ó–î–ê–ù –£–°–ü–ï–®–ù–û!")
        print("üîß –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –î–æ–±–∞–≤—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 ssh_key_update.py")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        test_connection()
    else:
        print("‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –°–û–ó–î–ê–¢–¨ –ö–õ–Æ–ß!")
        print("üîß –í–´–ü–û–õ–ù–ò–¢–ï –í–†–£–ß–ù–£–Æ:")
        print("1. ssh-keygen -t rsa -b 4096 -f server_key -N ''")
        print("2. chmod 600 server_key")
        print("3. –î–æ–±–∞–≤—å—Ç–µ server_key.pub –≤ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")

if __name__ == "__main__":
    main()
