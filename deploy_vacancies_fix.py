#!/usr/bin/env python3
"""
Deployment —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CSV –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
"""

import subprocess
import os
import time
from datetime import datetime

def deploy_vacancies_fix():
    """Deploy –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º deployment –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π CSV –∑–∞–≥—Ä—É–∑–∫–∏...")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    host = "72.56.66.228"
    username = "root"
    key_path = "/Users/mikhaileliseev/Desktop/–ö–ó GSR/server_key_new"
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∫–ª—é—á
        os.chmod(key_path, 0o600)
        print("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ SSH –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        def run_ssh_command(command):
            """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ SSH"""
            cmd = ["ssh", "-i", key_path, "-o", "StrictHostKeyChecking=no", 
                   "-o", "ConnectTimeout=10", f"{username}@{host}", command]
            result = subprocess.run(cmd, capture_output=True, text=True, timeout=30)
            return result.returncode, result.stdout, result.stderr
        
        # 1. –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
        print("üì¶ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ routes/vacancies.py...")
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_cmd = f"cp /root/routes/vacancies.py /root/routes/vacancies.py.backup_{timestamp}"
        exit_code, stdout, stderr = run_ssh_command(backup_cmd)
        if exit_code != 0:
            print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞: {stderr}")
        print("‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω")
        
        # 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä
        print("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–µ—Ä...")
        stop_cmd = "pkill -f 'python.*app' || true"
        exit_code, stdout, stderr = run_ssh_command(stop_cmd)
        time.sleep(2)
        print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —á–µ—Ä–µ–∑ scp
        print("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π routes/vacancies.py...")
        scp_cmd = ["scp", "-i", key_path, "-o", "StrictHostKeyChecking=no",
                   "/Users/mikhaileliseev/Desktop/–ö–ó GSR/routes/vacancies.py", 
                   f"{username}@{host}:/root/routes/vacancies.py"]
        result = subprocess.run(scp_cmd, capture_output=True, text=True, timeout=30)
        
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {result.stderr}")
            return False
        
        print("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python...")
        exit_code, stdout, stderr = run_ssh_command("python3 -m py_compile /root/routes/vacancies.py")
        
        if exit_code != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {stderr}")
            return False
        
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        # 5. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
        start_cmd = "cd /root && nohup python3 app_current_backup.py > server.log 2>&1 &"
        exit_code, stdout, stderr = run_ssh_command(start_cmd)
        time.sleep(3)
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞...")
        exit_code, stdout, stderr = run_ssh_command("ps aux | grep python | grep -v grep")
        
        if "python" in stdout:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        else:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
            exit_code, log_stdout, log_stderr = run_ssh_command("tail -20 /root/server.log")
            print(f"–õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:\n{log_stdout}")
            return False
        
        # 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint...")
        exit_code, test_stdout, test_stderr = run_ssh_command("curl -s http://localhost:5000/api/vacancies/upload-csv -X POST -F 'file=@/dev/null' || echo 'Endpoint test failed'")
        
        if "—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" in test_stdout or "error" in test_stdout.lower():
            print("‚úÖ Endpoint –æ—Ç–≤–µ—á–∞–µ—Ç (–æ–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Ñ–∞–π–ª–∞)")
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç endpoint: {test_stdout}")
        
        print("\nüéâ Deployment –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üåê –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://{host}/module/vacancies")
        print("üìã –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://72.56.66.228/module/vacancies")
        print("2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ deployment: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = deploy_vacancies_fix()
    exit(0 if success else 1)
