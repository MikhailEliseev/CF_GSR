#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –≤–∞–∫–∞–Ω—Å–∏–π
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –ø–∞—Ä—Å–∏–Ω–≥ ‚Üí –≤—ã–±–æ—Ä ‚Üí –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ ‚Üí –∞—É–¥–∏–æ ‚Üí –≤–∏–¥–µ–æ
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://72.56.66.228"
# BASE_URL = "http://localhost:5000"  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

def test_vacancies_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ endpoints –º–æ–¥—É–ª—è –≤–∞–∫–∞–Ω—Å–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –≤–∞–∫–∞–Ω—Å–∏–π")
    print("=" * 50)
    
    # 1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /api/vacancies/test")
    try:
        response = requests.get(f"{BASE_URL}/api/vacancies/test", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –£—Å–ø–µ—Ö: –ø–æ–ª—É—á–µ–Ω–æ {len(data.get('vacancies', []))} —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é
            if data.get('vacancies'):
                first_vacancy = data['vacancies'][0]
                print(f"   üìã –ü–µ—Ä–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è: {first_vacancy.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                print(f"   üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {first_vacancy.get('company', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                print(f"   üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞: {first_vacancy.get('salary', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}")
    
    # 2. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ Google Sheets (—Å —Ç–µ—Å—Ç–æ–≤—ã–º URL)
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /api/vacancies/parse")
    test_sheets_url = "https://docs.google.com/spreadsheets/d/1I1AfpmNbd-K0Osd4Vh7npDCYSQr2a1t_KdT8ms9vgr4/edit?gid=718924971#gid=718924971"
    
    try:
        payload = {"url": test_sheets_url}
        response = requests.post(
            f"{BASE_URL}/api/vacancies/parse", 
            json=payload, 
            timeout=30
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print(f"   ‚úÖ –£—Å–ø–µ—Ö: —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ {len(data.get('vacancies', []))} –≤–∞–∫–∞–Ω—Å–∏–π")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∞–∫–∞–Ω—Å–∏—é
                if data.get('vacancies'):
                    first_vacancy = data['vacancies'][0]
                    print(f"   üìã –ü–µ—Ä–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è: {first_vacancy.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                    print(f"   üè¢ –û–±—ä–µ–∫—Ç: {first_vacancy.get('object', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}")
    
    # 3. –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º /api/vacancies/generate-text")
    test_vacancy = {
        "title": "–°–±–æ—Ä—â–∏–∫ –Ω–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–µ",
        "object": "–õ–ì –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—Å - –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ç–µ—Ö–Ω–∏–∫–∏",
        "salary": "320 —Ä—É–±/—á–∞—Å, 30 —Å–º–µ–Ω - 105600 —Ä—É–±",
        "conditions": "—Å–º–µ–Ω–∞ - 11 —á–∞—Å–æ–≤, –í–∞—Ö—Ç–∞: 30/45 —Å–º–µ–Ω",
        "requirements": "–û—Ç 18 –¥–æ 45 –ª–µ—Ç, –†–§/–ï–ê–≠–°",
        "benefits": "–°–±–æ—Ä–∫–∞ –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏, —á–∏—Å—Ç–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ",
        "positions_needed": "15 –º—É–∂.",
        "manager": "–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –¢—Ä–µ–Ω–∏–Ω",
        "company": "–û–û–û\"–§–æ—Ä—Ç—Ä–µ–Ω–¥\"",
        "company_benefits": "–£–¥–∞–ª–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, 25 –æ—Ñ–∏—Å–æ–≤"
    }
    
    try:
        payload = {"vacancy": test_vacancy}
        response = requests.post(
            f"{BASE_URL}/api/vacancies/generate-text", 
            json=payload, 
            timeout=30
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                text = data.get('text', '')
                print(f"   ‚úÖ –£—Å–ø–µ—Ö: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Ç–µ–∫—Å—Ç ({len(text)} —Å–∏–º–≤–æ–ª–æ–≤)")
                print(f"   üìù –ü—Ä–µ–≤—å—é: {text[:200]}...")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}")
    
    # 4. –¢–µ—Å—Ç –æ–±—â–∏—Ö endpoints (–∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ)
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—â–∏–µ endpoints")
    
    # –¢–µ—Å—Ç ElevenLabs voices
    try:
        response = requests.get(f"{BASE_URL}/api/elevenlabs/voices", timeout=10)
        print(f"   ElevenLabs voices: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –ì–æ–ª–æ—Å–∞: {len(data.get('voices', []))} –¥–æ—Å—Ç—É–ø–Ω–æ")
    except Exception as e:
        print(f"   ‚ùå ElevenLabs voices: {str(e)}")
    
    # –¢–µ—Å—Ç HeyGen avatars
    try:
        response = requests.get(f"{BASE_URL}/api/heygen/avatars", timeout=10)
        print(f"   HeyGen avatars: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"   ‚úÖ –ê–≤–∞—Ç–∞—Ä—ã: {len(data.get('avatars', []))} –¥–æ—Å—Ç—É–ø–Ω–æ")
    except Exception as e:
        print(f"   ‚ùå HeyGen avatars: {str(e)}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_frontend_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å frontend —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ frontend")
    print("=" * 30)
    
    try:
        response = requests.get(f"{BASE_URL}/module_vacancies", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–¥—É–ª—è –≤–∞–∫–∞–Ω—Å–∏–π –¥–æ—Å—Ç—É–ø–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            content = response.text
            if "–ú–æ–¥—É–ª—å –í–∞–∫–∞–Ω—Å–∏–π" in content:
                print("   ‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞–π–¥–µ–Ω")
            if "vacanciesTable" in content:
                print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞–π–¥–µ–Ω–∞")
            if "DataTables" in content:
                print("   ‚úÖ DataTables –ø–æ–¥–∫–ª—é—á–µ–Ω")
            if "selectVacancyFromTable" in content:
                print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è –≤–∞–∫–∞–Ω—Å–∏–π")
    print(f"üéØ –¶–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: {BASE_URL}")
    
    test_vacancies_endpoints()
    test_frontend_access()
    
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://72.56.66.228/module_vacancies")
    print("2. –ù–∞–∂–º–∏—Ç–µ '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π")
    print("3. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é –≤ —Ç–∞–±–ª–∏—Ü–µ")
    print("4. –ù–∞–∂–º–∏—Ç–µ '–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞'")
    print("5. –°–æ–∑–¥–∞–π—Ç–µ –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ –æ–±—â–∏–π pipeline")
