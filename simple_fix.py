#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import subprocess
import time

def run_ssh_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç SSH –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run([
            'sshpass', '-p', 'g2D,RytdQoSAYv', 
            'ssh', '-o', 'StrictHostKeyChecking=no', 
            'root@72.56.66.228', command
        ], capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {str(e)}")
        return False

def main():
    """–ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"""
    print("üîß –ü–†–û–°–¢–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï")
    print("=" * 30)
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    run_ssh_command("pkill -f python", "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
    time.sleep(3)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–æ–º
    working_code = '''#!/usr/bin/env python3
"""
–í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–ê–Ø –†–ê–ë–û–ß–ê–Ø –í–ï–†–°–ò–Ø –° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ú –ú–ê–†–®–†–£–¢–û–ú
"""

from flask import Flask, render_template, request, jsonify, redirect, url_for, flash
from flask_socketio import SocketIO, emit
from flask_cors import CORS
from models import db, Settings, Competitors, TaskStatus, VideoGeneration, ExpertTopics
from config import Config
import uuid
import os
from datetime import datetime
import json
import re
import io
import csv
from typing import List, Dict, Any, Optional
import requests

def create_app():
    app = Flask(__name__)
    app.config.from_object(Config)
    
    # Initialize extensions
    db.init_app(app)
    CORS(app)
    socketio = SocketIO(app, cors_allowed_origins="*", async_mode='threading')
    
    # Create tables
    with app.app_context():
        db.create_all()
    
    @app.route('/')
    def index():
        return render_template('index.html')
    
    @app.route('/module/<module_name>')
    def module_page(module_name):
        if module_name not in ['trends', 'vacancies', 'experts']:
            flash('–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error')
            return redirect(url_for('index'))
        
        settings = Settings.query.filter_by(module_name=module_name).first()
        return render_template(f'module_{module_name}.html', settings=settings)
    
    # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –ú–ê–†–®–†–£–¢ –î–õ–Ø –ü–û–®–ê–ì–û–í–û–ì–û –ò–ù–¢–ï–†–§–ï–ô–°–ê
    @app.route('/trends/step-by-step')
    def trends_step_by_step():
        """–ü–æ—à–∞–≥–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–æ–¥—É–ª—è —Ç—Ä–µ–Ω–¥–≤–æ—Ç—á–∏–Ω–≥–∞"""
        return render_template('trends_advanced.html')
    
    # WebSocket events for real-time updates
    @socketio.on('connect')
    def handle_connect():
        print('Client connected')
    
    @socketio.on('join_task')
    def handle_join_task(data):
        task_id = data['task_id']
        from flask_socketio import join_room
        join_room(task_id)
    
    return app, socketio

if __name__ == '__main__':
    app, socketio = create_app()
    print("üöÄ –ö–æ–Ω—Ç–µ–Ω—Ç –ó–∞–≤–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è (–í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)")
    print("‚úÖ –° –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
    print("‚úÖ –° –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º")
    print("‚úÖ –° –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏")
    print("‚úÖ –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ø–æ—à–∞–≥–æ–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º")
    try:
        socketio.run(app, host="0.0.0.0", port=5000, debug=False, allow_unsafe_werkzeug=True)
    except OSError:
        print("‚ö†Ô∏è –ü–æ—Ä—Ç 5000 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º 5002")
        socketio.run(app, host="0.0.0.0", port=5002, debug=False, allow_unsafe_werkzeug=True)
'''
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é
    print("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏...")
    result = subprocess.run([
        'sshpass', '-p', 'g2D,RytdQoSAYv',
        'ssh', '-o', 'StrictHostKeyChecking=no',
        'root@72.56.66.228', 'cat > /var/www/gsr-content-factory/app_current_backup.py'
    ], input=working_code, text=True, timeout=30)
    
    if result.returncode == 0:
        print("‚úÖ –†–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    run_ssh_command("cd /var/www/gsr-content-factory && nohup python3 app.py > app.log 2>&1 &", "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    
    print("\n" + "=" * 30)
    print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üìã –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã:")
    print("1. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://72.56.66.228/module/trends")
    print("2. –ü–æ—à–∞–≥–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://72.56.66.228/trends/step-by-step")
    print("3. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://72.56.66.228/trends/advanced")

if __name__ == "__main__":
    main()
