#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –í–°–ï–• –ø–æ–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∏–Ω–¥–µ–∫—Å–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from routes.vacancies import parse_vacancies_direct

def test_all_fields():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ –≤—Å–µ –ø–æ–ª—è —Ç–µ–ø–µ—Ä—å –±–µ—Ä—É—Ç—Å—è –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    test_csv = """–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏,–û–±—ä–µ–∫—Ç,–û–ø–ª–∞—Ç–∞,–£—Å–ª–æ–≤–∏—è,–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è,–ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å,–ú–µ–Ω–µ–¥–∂–µ—Ä,–Æ—Ä.–ª–∏—Ü–æ,–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
–î–æ–ª–∂–Ω–æ—Å—Ç—å:,–û–±—ä–µ–∫—Ç,–û–ø–ª–∞—Ç–∞,–£—Å–ª–æ–≤–∏—è,–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è,–ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å,–ú–µ–Ω–µ–¥–∂–µ—Ä,–Æ—Ä.–ª–∏—Ü–æ,–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
,–°–±–æ—Ä—â–∏–∫ –Ω–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–µ,320 —Ä—É–±/—á–∞—Å,—Å–º–µ–Ω–∞ - 11 —á–∞—Å–æ–≤,–û—Ç 18 –¥–æ 45 –ª–µ—Ç,15 –º—É–∂.,–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –¢—Ä–µ–Ω–∏–Ω,–û–û–û –§–æ—Ä—Ç—Ä–µ–Ω–¥,–°–±–æ—Ä–∫–∞ –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –í–°–ï –ø–æ–ª—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    print("CSV —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:")
    print("A: –ê–∫—Ü–∏–∏, B: –û–±—ä–µ–∫—Ç, C: –û–ø–ª–∞—Ç–∞, D: –£—Å–ª–æ–≤–∏—è, E: –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è, F: –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å, G: –ú–µ–Ω–µ–¥–∂–µ—Ä, H: –Æ—Ä.–ª–∏—Ü–æ, I: –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞")
    print()
    
    # –ü–∞—Ä—Å–∏–º CSV
    vacancies = parse_vacancies_direct(test_csv)
    
    if not vacancies:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π!")
        return False
    
    vacancy = vacancies[0]
    print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:")
    print(f"  position: '{vacancy['position']}'")
    print(f"  location: '{vacancy['location']}'")
    print(f"  salary: '{vacancy['salary']}'")
    print(f"  conditions: '{vacancy['conditions']}'")
    print(f"  requirements: '{vacancy['requirements']}'")
    print(f"  positions_needed: '{vacancy['positions_needed']}'")
    print(f"  manager: '{vacancy['manager']}'")
    print(f"  company: '{vacancy['company']}'")
    print(f"  benefits: '{vacancy['benefits']}'")
    print()
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    expected = {
        'position': '–°–±–æ—Ä—â–∏–∫ –Ω–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–µ',  # B
        'location': '–°–±–æ—Ä—â–∏–∫ –Ω–∞ –∫–æ–Ω–≤–µ–π–µ—Ä–µ',  # B
        'salary': '320 —Ä—É–±/—á–∞—Å',             # C
        'conditions': '—Å–º–µ–Ω–∞ - 11 —á–∞—Å–æ–≤',   # D
        'requirements': '–û—Ç 18 –¥–æ 45 –ª–µ—Ç',   # E
        'positions_needed': '15 –º—É–∂.',       # F
        'manager': '–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –¢—Ä–µ–Ω–∏–Ω',     # G
        'company': '–û–û–û –§–æ—Ä—Ç—Ä–µ–Ω–¥',          # H
        'benefits': '–°–±–æ—Ä–∫–∞ –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏' # I
    }
    
    print("üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è:")
    all_correct = True
    
    for field, expected_value in expected.items():
        actual_value = vacancy[field]
        if actual_value == expected_value:
            print(f"  ‚úÖ {field}: '{actual_value}'")
        else:
            print(f"  ‚ùå {field}: –æ–∂–∏–¥–∞–ª–æ—Å—å '{expected_value}', –ø–æ–ª—É—á–µ–Ω–æ '{actual_value}'")
            all_correct = False
    
    print()
    if all_correct:
        print("üéâ –í–°–ï –ü–û–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–´! –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫!")
        return True
    else:
        print("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è –≤—Å—ë –µ—â—ë –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
        return False

if __name__ == "__main__":
    success = test_all_fields()
    if success:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    else:
        print("\nüí• –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö!")
    sys.exit(0 if success else 1)
