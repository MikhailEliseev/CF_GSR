#!/usr/bin/env python3
"""
–¢–µ—Å—Ç ElevenLabs API –ª–æ–∫–∞–ª—å–Ω–æ
"""

import requests
import json

def test_elevenlabs_local():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API –ª–æ–∫–∞–ª—å–Ω–æ"""
    api_key = "sk_76ff61f01df7d9a12c594e8f45cfa349d1917402ba5ec828"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API –ª–æ–∫–∞–ª—å–Ω–æ...")
    
    try:
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        response = requests.get(
            "https://api.elevenlabs.io/v1/user",
            headers={"xi-api-key": api_key},
            timeout=15
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            user_data = response.json()
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('first_name', 'N/A')}")
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞: {user_data.get('subscription', {}).get('tier', 'N/A')}")
            print(f"‚úÖ Workspace: {user_data.get('workspace', {}).get('name', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤
        print("\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –≥–æ–ª–æ—Å–∞...")
        response = requests.get(
            "https://api.elevenlabs.io/v1/voices",
            headers={"xi-api-key": api_key},
            timeout=15
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            voices = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤: {len(voices.get('voices', []))}")
            if voices.get('voices'):
                first_voice = voices['voices'][0]
                print(f"‚úÖ –ü–µ—Ä–≤—ã–π –≥–æ–ª–æ—Å: {first_voice.get('name', 'N/A')} (ID: {first_voice.get('voice_id', 'N/A')})")
                
                # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ
                print("\n3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ...")
                payload = {
                    "text": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç ElevenLabs API.",
                    "model_id": "eleven_multilingual_v2",
                    "voice_settings": {
                        "stability": 0.5,
                        "similarity_boost": 0.5
                    }
                }
                
                response = requests.post(
                    f"https://api.elevenlabs.io/v1/text-to-speech/{first_voice['voice_id']}",
                    headers={
                        "xi-api-key": api_key,
                        "Content-Type": "application/json"
                    },
                    json=payload,
                    timeout=30
                )
                
                print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
                if response.status_code == 200:
                    print(f"‚úÖ –ê—É–¥–∏–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ! –†–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                    with open("test_audio_local.mp3", "wb") as f:
                        f.write(response.content)
                    print("üíæ –ê—É–¥–∏–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ test_audio_local.mp3")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.text}")
                    return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤: {response.text}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_elevenlabs_local()
    if success:
        print("\nüéâ ElevenLabs API —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ!")
        print("–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        print("\n‚ùå ElevenLabs API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ")
        print("–í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–º")
