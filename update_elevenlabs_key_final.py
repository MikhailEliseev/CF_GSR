#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ElevenLabs API –∫–ª—é—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import paramiko
import json
import time

SERVER_HOST = "72.56.66.228"
SERVER_USER = "root"
SERVER_PASSWORD = "g2D,RytdQoSAYv"

def update_elevenlabs_key():
    """–û–±–Ω–æ–≤–ª—è–µ–º ElevenLabs API –∫–ª—é—á"""
    print("üîë –û–±–Ω–æ–≤–ª—è–µ–º ElevenLabs API –∫–ª—é—á...")
    
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(SERVER_HOST, username=SERVER_USER, password=SERVER_PASSWORD)
    
    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("\n1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
        stdin, stdout, stderr = ssh.exec_command("curl -s http://localhost:5000/api/settings/vacancies")
        current_settings_str = stdout.read().decode().strip()
        
        try:
            current_settings = json.loads(current_settings_str)
        except json.JSONDecodeError:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {current_settings_str}")
            return False
        
        print(f"–¢–µ–∫—É—â–∏–π –∫–ª—é—á ElevenLabs: {current_settings.get('api_keys', {}).get('elevenlabs_api_key', '–ù–ï–¢')[:20]}...")
        
        # 2. –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á
        print("\n2Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á...")
        new_key = "sk_76ff61f01df7d9a12c594e8f45cfa349d1917402ba5ec828"
        
        api_keys = current_settings.get("api_keys", {})
        additional_settings = current_settings.get("additional_settings", {})
        
        api_keys["elevenlabs_api_key"] = new_key
        
        update_payload = {
            "module_name": "vacancies",
            "api_keys": api_keys,
            "additional_settings": additional_settings
        }
        
        print("üîë –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...")
        update_cmd = f"curl -X POST -H 'Content-Type: application/json' -d '{json.dumps(update_payload)}' http://localhost:5000/api/settings/vacancies"
        stdin, stdout, stderr = ssh.exec_command(update_cmd)
        update_result = stdout.read().decode().strip()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_result}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á –æ–±–Ω–æ–≤–∏–ª—Å—è
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...")
        stdin, stdout, stderr = ssh.exec_command("curl -s http://localhost:5000/api/settings/vacancies")
        updated_settings_str = stdout.read().decode().strip()
        updated_settings = json.loads(updated_settings_str)
        
        updated_api_keys = updated_settings.get("api_keys", {})
        if updated_api_keys.get("elevenlabs_api_key") == new_key:
            print(f"‚úÖ –ö–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_api_keys.get('elevenlabs_api_key')[:20]}...")
        else:
            print("‚ùå –ö–ª—é—á –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è!")
            return False
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API —Å —Å–µ—Ä–≤–µ—Ä–∞
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API...")
        test_script = f'''
import requests
import json

api_key = "{new_key}"

try:
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º ElevenLabs API...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    response = requests.get(
        "https://api.elevenlabs.io/v1/user",
        headers={{"xi-api-key": api_key}},
        timeout=15
    )
    print(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {{response.status_code}}")
    if response.status_code == 200:
        user_data = response.json()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{user_data.get('first_name', 'N/A')}}")
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞: {{user_data.get('subscription', {{}}).get('tier', 'N/A')}}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {{response.text[:200]}}")
        exit(1)
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤
    response = requests.get(
        "https://api.elevenlabs.io/v1/voices",
        headers={{"xi-api-key": api_key}},
        timeout=15
    )
    print(f"–°—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤: {{response.status_code}}")
    if response.status_code == 200:
        voices = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤: {{len(voices.get('voices', []))}}")
        if voices.get('voices'):
            first_voice = voices['voices'][0]
            print(f"‚úÖ –ü–µ—Ä–≤—ã–π –≥–æ–ª–æ—Å: {{first_voice.get('name', 'N/A')}} (ID: {{first_voice.get('voice_id', 'N/A')}})")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤: {{response.text[:200]}}")
        exit(1)
    
    print("üéâ ElevenLabs API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {{e}}")
    exit(1)
'''
        
        stdin, stdout, stderr = ssh.exec_command(f"python3 -c \"{test_script}\"")
        result = stdout.read().decode()
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:")
        print(result)
        
        if "‚úÖ" in result and "—Ä–∞–±–æ—Ç–∞–µ—Ç" in result:
            print("\nüéâ ElevenLabs API —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–æ–≤—ã–º –∫–ª—é—á–æ–º!")
            return True
        else:
            print("\n‚ùå ElevenLabs API –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    finally:
        ssh.close()

if __name__ == "__main__":
    success = update_elevenlabs_key()
    if success:
        print("\n‚úÖ ElevenLabs –∫–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞—É–¥–∏–æ –Ω–∞ http://72.56.66.228/module/vacancies")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å ElevenLabs API")
