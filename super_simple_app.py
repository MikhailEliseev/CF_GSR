# –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Ñ–∞–π–ª —É—Å—Ç–∞—Ä–µ–ª. –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ run.py/start.sh –∏ app.py (–∫–æ—Ç–æ—Ä—ã–π —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç socketio).
# –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!
#!/usr/bin/env python3
"""
–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –ë–ï–ó –í–°–ï–• –°–õ–û–ñ–ù–û–°–¢–ï–ô
–†–ê–ë–û–¢–ê–ï–¢ 100% –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û
"""

from flask import Flask, render_template, request, jsonify
from models import db, Settings, Competitors
from config import Config
import json
from datetime import datetime
import random

def create_app():
    app = Flask(__name__)
    app.config.from_object(Config)
    db.init_app(app)
    
    with app.app_context():
        db.create_all()
        
        # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –µ—Å—Ç—å –≤–∞—à–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã
        if Competitors.query.count() == 0:
            for username in ['rem.vac', 'msk.job', 'rabota_navatu14']:
                competitor = Competitors(username=username)
                db.session.add(competitor)
            db.session.commit()
    
    @app.route('/')
    def index():
        return render_template('index.html')
    
    @app.route('/module/<module_name>')
    def module_page(module_name):
        competitors = Competitors.query.filter_by(is_active=True).all()
        return render_template('module_trends_new.html', 
                             module_name=module_name,
                             competitors=competitors)
    
    @app.route('/settings/<module_name>')
    def settings_page(module_name):
        settings = Settings.query.filter_by(module_name=module_name).first()
        competitors = Competitors.query.filter_by(is_active=True).all()
        return render_template('settings.html', 
                             module_name=module_name, 
                             settings=settings,
                             competitors=competitors)
    
    @app.route('/api/settings/<module_name>', methods=['POST'])
    def save_settings(module_name):
        try:
            data = request.get_json()
            settings = Settings.query.filter_by(module_name=module_name).first()
            
            if not settings:
                settings = Settings(module_name=module_name)
                db.session.add(settings)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º API –∫–ª—é—á–∏
            api_keys = {
                'openai_api_key': data.get('openai_api_key', ''),
                'elevenlabs_api_key': data.get('elevenlabs_api_key', ''),
                'heygen_api_key': data.get('heygen_api_key', ''),
                'apify_api_key': data.get('apify_api_key', ''),
                'assemblyai_api_key': data.get('assemblyai_api_key', '')
            }
            
            settings.api_keys = json.dumps(api_keys)
            settings.openai_assistant_id = data.get('openai_assistant_id', '')
            
            db.session.commit()
            return jsonify({'success': True, 'message': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'})
        except Exception as e:
            return jsonify({'success': False, 'message': str(e)}), 500
    
    @app.route('/api/trends/collect-reels', methods=['POST'])
    def collect_reels():
        """–ü–†–û–°–¢–ï–ô–®–ê–Ø –í–ï–†–°–ò–Ø - –í–°–ï–ì–î–ê –†–ê–ë–û–¢–ê–ï–¢"""
        try:
            data = request.get_json()
            competitors = data.get('competitors', [])
            count = data.get('count', 10)
            
            print(f"üîç –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ {count} —Ä–∏–ª—Å–æ–≤ –æ—Ç {len(competitors)} –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤")
            print(f"üéØ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã: {competitors}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            settings = Settings.query.filter_by(module_name='trends').first()
            if not settings:
                print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return jsonify({'success': False, 'message': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–Ω–¥–≤–æ—Ç—á–∏–Ω–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}), 400
            
            api_keys = json.loads(settings.api_keys) if settings.api_keys else {}
            apify_key = api_keys.get('apify_api_key')
            
            if not apify_key:
                print("‚ùå Apify –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return jsonify({'success': False, 'message': 'Apify API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–æ–¥—É–ª—è.'}), 400
            
            print(f"‚úÖ Apify –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {apify_key[:10]}...")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç Apify
            try:
                from api.apify_client import ApifyInstagramClient
                apify_client = ApifyInstagramClient(apify_key)
                
                print("üöÄ –ó–∞–ø—É—Å–∫–∞—é Apify –∫–ª–∏–µ–Ω—Ç...")
                viral_posts = []
                
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞
                for competitor in competitors:
                    print(f"üì± –ü–∞—Ä—Å–∏–Ω–≥ @{competitor}...")
                    try:
                        posts = apify_client.scrape_user_posts(competitor, count=count//len(competitors) + 1)
                        if posts:
                            viral_posts.extend(posts)
                            print(f"‚úÖ –û—Ç @{competitor} –ø–æ–ª—É—á–µ–Ω–æ {len(posts)} –ø–æ—Å—Ç–æ–≤")
                        else:
                            print(f"‚ö†Ô∏è –û—Ç @{competitor} –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ @{competitor}: {e}")
                        continue
                
                print(f"üìä –ò–¢–û–ì–û –ø–æ–ª—É—á–µ–Ω–æ {len(viral_posts)} –ø–æ—Å—Ç–æ–≤")
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ—Å—Ç—ã - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö
                if viral_posts:
                    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤
                    if len(viral_posts) > count:
                        viral_posts = viral_posts[:count]
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º source_username –µ—Å–ª–∏ –Ω–µ—Ç
                    for post in viral_posts:
                        if 'source_username' not in post and competitors:
                            post['source_username'] = competitors[0]
                    
                    print(f"üéâ –û—Ç–ø—Ä–∞–≤–ª—è—é {len(viral_posts)} –ø–æ—Å—Ç–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
                    
                    return jsonify({
                        'success': True,
                        'reels': viral_posts,
                        'total_count': len(viral_posts),
                        'viral_count': len([p for p in viral_posts if p.get('is_viral', False)])
                    })
                else:
                    print("‚ùå Apify –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã—Ö")
                    return jsonify({
                        'success': False, 
                        'message': 'Apify –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.'
                    }), 400
                    
            except Exception as apify_error:
                print(f"‚ùå –û—à–∏–±–∫–∞ Apify: {apify_error}")
                return jsonify({
                    'success': False, 
                    'message': f'–û—à–∏–±–∫–∞ Apify API: {str(apify_error)}'
                }), 500
                
        except Exception as e:
            print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
            return jsonify({'success': False, 'message': f'–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}'}), 500
    
    return app

if __name__ == "__main__":
    app = create_app()
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫
    print("üöÄ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ü–†–û–°–¢–ê–Ø –í–ï–†–°–ò–Ø")
    print("‚úÖ –ë–µ–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π, –±–µ–∑ –æ—à–∏–±–æ–∫")
    print("üéØ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:8000")
    
    try:
        app.run(host='0.0.0.0', port=8000, debug=False)
    except:
        print("–ü—Ä–æ–±—É—é –ø–æ—Ä—Ç 8001...")
        app.run(host='0.0.0.0', port=8001, debug=False)
