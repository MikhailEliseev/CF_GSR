#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import paramiko
import requests
import json

def update_elevenlabs_key():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ElevenLabs API –∫–ª—é—á–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    
    print("üöÄ –û–±–Ω–æ–≤–ª—è–µ–º ElevenLabs API –∫–ª—é—á –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...")
    
    # SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    try:
        print("üîê –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É...")
        ssh.connect('72.56.66.228', username='root', password='g2D,RytdQoSAYv')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á —á–µ—Ä–µ–∑ API
        print("üîë –û–±–Ω–æ–≤–ª—è–µ–º ElevenLabs API –∫–ª—é—á...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        get_cmd = "curl -s http://localhost:5000/api/settings/vacancies"
        stdin, stdout, stderr = ssh.exec_command(get_cmd)
        current_settings = stdout.read().decode()
        print(f"üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {current_settings[:200]}...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á
        update_data = {
            "elevenlabs_api_key": "sk_76ff61f01df7d9a12c594e8f45cfa349d1917402ba5ec828"
        }
        
        update_cmd = f"""curl -X POST http://localhost:5000/api/settings/vacancies \
            -H "Content-Type: application/json" \
            -d '{json.dumps(update_data)}'"""
        
        stdin, stdout, stderr = ssh.exec_command(update_cmd)
        result = stdout.read().decode()
        print(f"üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª—é—á –æ–±–Ω–æ–≤–∏–ª—Å—è
        print("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–ª—é—á...")
        check_cmd = "curl -s http://localhost:5000/api/settings/vacancies | grep -o 'sk_[a-zA-Z0-9]*' | head -1"
        stdin, stdout, stderr = ssh.exec_command(check_cmd)
        updated_key = stdout.read().decode().strip()
        
        if updated_key:
            print(f"‚úÖ –ö–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_key[:20]}...")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞")
        
        print("üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ElevenLabs –∫–ª—é—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞: {e}")
        return False
    finally:
        ssh.close()
    
    return True

if __name__ == '__main__':
    update_elevenlabs_key()
