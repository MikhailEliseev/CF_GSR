// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ —Å –ª—É—á—à–∏–º –ø–ª–µ–µ—Ä–æ–º
async function generateAudioAdvanced() {
    console.log('üîä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...');
    const statusDiv = document.getElementById('audioStatus');
    const audioResult = document.getElementById('audioResult');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —à–∞–≥–∞ 4
    const rewrittenText = document.getElementById('rewrittenText');
    if (!rewrittenText || !rewrittenText.textContent.trim()) {
        statusDiv.innerHTML = `
            <div class="alert alert-warning">
                <i class="fas fa-exclamation-triangle me-2"></i>
                –°–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ —à–∞–≥–µ 4
            </div>`;
        return;
    }
    
    const text = rewrittenText.textContent.trim();
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const voiceId = document.getElementById('voiceSelect').value;
    const modelId = document.getElementById('modelSelect').value;
    const speed = parseFloat(document.getElementById('speedSlider').value);
    const stability = parseFloat(document.getElementById('stabilitySlider').value);
    const similarity = parseFloat(document.getElementById('similaritySlider').value);
    
    statusDiv.innerHTML = `
        <div class="alert alert-info">
            <i class="fas fa-spinner fa-spin me-2"></i>
            –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏: –≥–æ–ª–æ—Å=${voiceId}, –º–æ–¥–µ–ª—å=${modelId}, —Å–∫–æ—Ä–æ—Å—Ç—å=${speed}...
        </div>`;
    
    try {
        const response = await fetch('/api/trends/generate-audio', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                text: text,
                voice_id: voiceId,
                model_id: modelId,
                speed: speed,
                stability: stability,
                similarity_boost: similarity
            })
        });
        
        const result = await response.json();
        
        if (result.success) {
            statusDiv.innerHTML = `
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>
                    –ê—É–¥–∏–æ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!
                </div>`;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            audioResult.style.display = 'block';
            
            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–ª–µ–µ—Ä
            setupEnhancedAudioPlayer(result.audio_url);
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
            activateStep6();
        } else {
            statusDiv.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}
                </div>`;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ:', error);
        statusDiv.innerHTML = `
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle me-2"></i>
                –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${error.message}
            </div>`;
    }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞
function setupEnhancedAudioPlayer(audioUrl) {
    console.log('üéµ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ –ø–ª–µ–µ—Ä–∞:', audioUrl);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º HTML –ø–ª–µ–µ—Ä–∞
    const audioResult = document.getElementById('audioResult');
    audioResult.innerHTML = `
        <h5 class="gsr-text-primary">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∞—É–¥–∏–æ:</h5>
        
        <!-- –û—Å–Ω–æ–≤–Ω–æ–π HTML5 –ø–ª–µ–µ—Ä -->
        <audio controls class="w-100 mb-3" id="audioPlayer" preload="metadata">
            <source id="audioSource" src="${audioUrl}" type="audio/mpeg">
            <source id="audioSourceOgg" src="${audioUrl.replace('.mp3', '.ogg')}" type="audio/ogg">
            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç.
        </audio>
        
        <!-- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–ª–µ–µ—Ä –¥–ª—è Chrome -->
        <div id="chromePlayer" class="d-none">
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>
                <strong>Chrome –ø–ª–µ–µ—Ä:</strong>
                <button class="btn btn-sm btn-primary ms-2" onclick="playChromeAudio()">
                    <i class="fas fa-play me-1"></i>–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
                </button>
                <button class="btn btn-sm btn-secondary ms-1" onclick="pauseChromeAudio()">
                    <i class="fas fa-pause me-1"></i>–ü–∞—É–∑–∞
                </button>
            </div>
        </div>
        
        <!-- –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è -->
        <div class="mt-2">
            <a href="${audioUrl}" class="btn btn-outline-primary btn-sm" download>
                <i class="fas fa-download me-1"></i>–°–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ
            </a>
        </div>
        
        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ -->
        <div class="mt-2 text-muted small">
            <span id="audioInfo">–ì–æ—Ç–æ–≤–æ –∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é</span>
        </div>
    `;
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–ª–µ–µ—Ä
    const audioPlayer = document.getElementById('audioPlayer');
    const audioInfo = document.getElementById('audioInfo');
    const chromePlayer = document.getElementById('chromePlayer');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
    const isChrome = /Chrome/.test(navigator.userAgent);
    
    if (isChrome) {
        console.log('üîß Chrome –æ–±–Ω–∞—Ä—É–∂–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–ª–µ–µ—Ä');
        chromePlayer.classList.remove('d-none');
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    audioPlayer.addEventListener('loadedmetadata', function() {
        console.log('‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∞—É–¥–∏–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        audioInfo.textContent = `–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${Math.round(audioPlayer.duration)} —Å–µ–∫`;
    });
    
    audioPlayer.addEventListener('error', function(e) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ:', e);
        audioInfo.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª.';
        
        if (isChrome) {
            chromePlayer.classList.remove('d-none');
        }
    });
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
    audioPlayer.load();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    window.currentAudioUrl = audioUrl;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è Chrome –ø–ª–µ–µ—Ä–∞
function playChromeAudio() {
    const audioPlayer = document.getElementById('audioPlayer');
    audioPlayer.play().catch(e => {
        console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', e);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª.');
    });
}

function pauseChromeAudio() {
    const audioPlayer = document.getElementById('audioPlayer');
    audioPlayer.pause();
}
