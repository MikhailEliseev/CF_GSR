#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CSV –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 72.56.66.228
"""

import subprocess
import os
import time
import sys

def run_command(cmd, description):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\nüîÑ {description}")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {cmd}")
    
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {description}")
            if result.stdout.strip():
                print(f"–í—ã–≤–æ–¥: {result.stdout.strip()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {description}")
            print(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {result.returncode}")
            if result.stderr.strip():
                print(f"–û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except subprocess.TimeoutExpired:
        print(f"‚è∞ –¢–∞–π–º–∞—É—Ç: {description}")
        return False
    except Exception as e:
        print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {description} - {e}")
        return False
    
    return True

def main():
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSV –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    if not os.path.exists("routes/vacancies.py"):
        print("‚ùå –§–∞–π–ª routes/vacancies.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    if not os.path.exists("server_key") and not os.path.exists("server_key_new"):
        print("‚ùå SSH –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("–ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã...")
        return try_alternative_methods()
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ SSH –∫–ª—é—á–∏
    ssh_keys = ["server_key_new", "server_key"]
    ssh_working = False
    
    for key in ssh_keys:
        if os.path.exists(key):
            print(f"\nüîë –ü—Ä–æ–±—É–µ–º SSH –∫–ª—é—á: {key}")
            if test_ssh_connection(key):
                ssh_working = True
                break
    
    if not ssh_working:
        print("\n‚ùå SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –º–µ—Ç–æ–¥–∞–º...")
        return try_alternative_methods()
    
    # –ï—Å–ª–∏ SSH —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º deployment
    return deploy_via_ssh(key)

def test_ssh_connection(key):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"""
    cmd = f'ssh -i {key} -o StrictHostKeyChecking=no -o ConnectTimeout=10 root@72.56.66.228 "echo SSH_TEST_SUCCESS"'
    return run_command(cmd, f"–¢–µ—Å—Ç SSH —Å –∫–ª—é—á–æ–º {key}")

def deploy_via_ssh(key):
    """Deployment —á–µ—Ä–µ–∑ SSH"""
    print(f"\nüì¶ –ù–∞—á–∏–Ω–∞–µ–º deployment —á–µ—Ä–µ–∑ SSH —Å –∫–ª—é—á–æ–º {key}")
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    if not run_command(
        f'ssh -i {key} root@72.56.66.228 "cp /root/routes/vacancies.py /root/routes/vacancies.py.backup_$(date +%Y%m%d_%H%M%S)"',
        "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    ):
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    
    # 2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    run_command(
        f'ssh -i {key} root@72.56.66.228 "pkill -f \'python.*app\' || true"',
        "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Flask —Å–µ—Ä–≤–µ—Ä–∞"
    )
    
    # 3. –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not run_command(
        f'scp -i {key} routes/vacancies.py root@72.56.66.228:/root/routes/',
        "–ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"
    ):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —á–µ—Ä–µ–∑ SCP")
        return False
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    if not run_command(
        f'ssh -i {key} root@72.56.66.228 "python3 -m py_compile /root/routes/vacancies.py"',
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python"
    ):
        print("‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ!")
        return False
    
    # 5. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    if not run_command(
        f'ssh -i {key} root@72.56.66.228 "cd /root && nohup python3 app_current_backup.py > server.log 2>&1 &"',
        "–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞"
    ):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä")
        return False
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞
    time.sleep(3)
    if not run_command(
        f'ssh -i {key} root@72.56.66.228 "ps aux | grep python | grep -v grep"',
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
    ):
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
        return False
    
    # 7. –¢–µ—Å—Ç endpoint
    if not run_command(
        f'ssh -i {key} root@72.56.66.228 "curl -s http://localhost:5000/api/vacancies/upload-csv -X POST -F \'file=@/dev/null\'"',
        "–¢–µ—Å—Ç endpoint —á–µ—Ä–µ–∑ curl"
    ):
        print("‚ö†Ô∏è Endpoint –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
    
    print("\n‚úÖ Deployment –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ http://72.56.66.228/module/vacancies")
    return True

def try_alternative_methods():
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã deployment"""
    print("\nüîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã...")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("üìù –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: manual_fix_instructions.md")
    
    # –°–æ–∑–¥–∞–µ–º –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    create_ready_to_copy_file()
    
    print("\nüìã –†–£–ß–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
    print("1. –ó–∞–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–º")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ /root/routes/")
    print("4. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª vacancies.py")
    print("5. –ù–∞–π–¥–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é parse_vacancies_direct() (—Å—Ç—Ä–æ–∫–∏ ~442-460)")
    print("6. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏–Ω–¥–µ–∫—Å—ã:")
    print("   - row[3] ‚Üí row[2] (salary)")
    print("   - row[4] ‚Üí row[3] (conditions)")
    print("   - row[5] ‚Üí row[4] (requirements)")
    print("   - row[6] ‚Üí row[5] (positions_needed)")
    print("   - row[7] ‚Üí row[6] (manager)")
    print("   - row[8] ‚Üí row[7] (company)")
    print("   - row[9] ‚Üí row[8] (benefits)")
    print("7. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª")
    print("8. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä")
    
    return True

def create_ready_to_copy_file():
    """–°–æ–∑–¥–∞–µ–º –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüìÑ –°–æ–∑–¥–∞–µ–º –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    # –ß–∏—Ç–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open("routes/vacancies.py", "r", encoding="utf-8") as f:
        content = f.read()
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    with open("vacancies_fixed_for_server.py", "w", encoding="utf-8") as f:
        f.write("# –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –§–ê–ô–õ –î–õ–Ø –°–ï–†–í–ï–†–ê\n")
        f.write("# –ó–∞–º–µ–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ /root/routes/vacancies.py –Ω–∞ —ç—Ç–æ—Ç –∫–æ–¥\n")
        f.write("# ================================================\n\n")
        f.write(content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: vacancies_fixed_for_server.py")
    print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ /root/routes/vacancies.py –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")

if __name__ == "__main__":
    success = main()
    if success:
        print("\nüéâ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.")
    
    sys.exit(0 if success else 1)
